package views;

import dao.BebidaDAO;
import dao.ClienteDAO;
import dao.PedidoDAO;
import java.awt.Color;
import javax.swing.JCheckBox;
import java.util.List;
import java.util.ArrayList;
import java.awt.Component;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import models.Bebida;
import models.Cliente;
import models.Endereco;
import models.NotaFiscal;
import models.Pedido;
import models.Pizza;
import models.PizzaMontada;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author aluno
 */
public class VendaPizza extends javax.swing.JFrame {
    int limit = 1;
    int nr_pedido = 0;
    String tamanho = "";
    List<Pizza> sabores;
    List<Bebida> listaDeBebidasSelecionadas = null;
    List<PizzaMontada> listaDePizzasMontadas = null;
    Endereco enderecoSelecionado = null;
    List<Bebida> listaDeBebidas = null;
    List<JCheckBox> checkboxList = new ArrayList<>();
    PedidoDAO pedidoDAO = null;
    List<JFormattedTextField> formattedTextFieldList = new ArrayList<>();

    ClienteDAO clienteDAO = new ClienteDAO();
    BebidaDAO bebidaDAO = new BebidaDAO();
    /**
     * Creates new form VendaLanche
     */
    private Cliente clienteSelecionado = new Cliente();
    private List<Cliente> listaClientes = new ArrayList<>();
    private List<Endereco> listaDeEnderecos = null;
    
    public VendaPizza() {
        initComponents();
        getContentPane().setBackground(Color.DARK_GRAY);
        atualizarTabelaCliente("","");
        atualizarTabelaEndereco("","","");
        atualizarTabelaBebida("");
        atualizarTabelaCarrinhoPizza();
        atualizarTabelaCarrinhoBebida();
    }
    
    public VendaPizza(Cliente cliente, List<PizzaMontada> listaDePizzasMontadas, List<Bebida> listaDeBebidasSelecionadas, Endereco enderecoSelecionado) {
        this.clienteSelecionado = cliente;
        this.listaDePizzasMontadas = listaDePizzasMontadas;
        this.listaDeBebidasSelecionadas = listaDeBebidasSelecionadas;
        this.enderecoSelecionado = enderecoSelecionado;
        initComponents();
        getContentPane().setBackground(Color.DARK_GRAY);
        if(enderecoSelecionado != null){
            mostraEnderecoSelecionado.setText(enderecoSelecionado.getRua());
        }
        if(clienteSelecionado != null){
            mostraClienteSelecionado.setText(clienteSelecionado.getNome());
        }
        totalPedido.setText(calcularValorTotal().toString());
        atualizarTabelaCliente("","");
        atualizarTabelaEndereco("","","");
        atualizarTabelaBebida("");
        atualizarTabelaCarrinhoPizza();
        atualizarTabelaCarrinhoBebida();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButtonDoces1 = new javax.swing.JRadioButton();
        jButtonDoces = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        concluirPedido = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelCliente = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cadastroNomeCliente = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        cadastroCliente = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        cadastroTelefoneCliente = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        filtroNomeCliente = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        filtroTelefoneCliente = new javax.swing.JTextField();
        filtrarCliente = new javax.swing.JButton();
        selecionarCliente = new javax.swing.JButton();
        editarCliente = new javax.swing.JButton();
        excluirCliente = new javax.swing.JButton();
        cadastroDataDeNascimentoCliente = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        panelEnderecos = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        tCEP = new javax.swing.JTextField();
        tRua = new javax.swing.JTextField();
        jDescricaoCadastro = new javax.swing.JLabel();
        tBairro = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        tNumero = new javax.swing.JTextField();
        jNumero = new javax.swing.JLabel();
        cadastrarEndereco = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        filtroRua = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        filtrarEndereco = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        tabelaEndereco = new javax.swing.JTable();
        excluirEndereco = new javax.swing.JButton();
        atualizarEndereco = new javax.swing.JButton();
        filtroCep = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        filtroBairro = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        selecionarEndereco = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        panelBebidas = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Bebida = new javax.swing.JScrollPane();
        tabelaBebida = new javax.swing.JTable();
        adicionarBebida = new javax.swing.JButton();
        quantidadeBebida = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        filtroNomeBebida = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        filtrarBebida = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCarrinhoPizza = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        adicionarPizza = new javax.swing.JButton();
        editarPizza = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaCarrinhoBebida = new javax.swing.JTable();
        jLabel45 = new javax.swing.JLabel();
        removerSabor = new javax.swing.JButton();
        atualizarBebida = new javax.swing.JButton();
        removerBebida = new javax.swing.JButton();
        totalPedido = new javax.swing.JTextField();
        mostraClienteSelecionado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        mostraEnderecoSelecionado = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Tamanho");

        jComboBox1.setFont(new java.awt.Font("Cascadia Code", 0, 12)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 102, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequena: 1 sabor, 8 fatias e 25cm R$ 20,00", "MÃ©dia: 2 sabores, 12 fatias R$ 37,00", "Grande: 3 sabores, 16 fatias R$ 47,00", "Grande familia: 4 sabores, 20 fatias R$ 67,00", "Big: 4 sabores, 24 fatias R$ 82,00", "Big retangular: 4 sabores, 32 fatias R$ 77,00" }));
        jComboBox1.setSelectedItem(-1);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "DescriÃ§Ã£o", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(90, 90, 90));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        jRadioButton1.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 102, 0));
        jRadioButton1.setText("Cheddar");

        jRadioButton2.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 102, 0));
        jRadioButton2.setText("Mussarela com oregano");

        jRadioButton3.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 102, 0));
        jRadioButton3.setText("Chocolate");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("Borda");

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pizza3.png"))); // NOI18N

        jButton2.setText("Adicionar");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Sabores Selecionado"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jButton4.setText("Remover");

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 119, 26));
        jLabel6.setText("Filtrar sabores por:");

        jRadioButton5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jRadioButton5.setForeground(new java.awt.Color(255, 119, 26));
        jRadioButton5.setText("~Sabores Especiais~");

        jButtonDoces1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButtonDoces1.setForeground(new java.awt.Color(255, 119, 26));
        jButtonDoces1.setText("~Sabores Tradicionais~");

        jButtonDoces.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButtonDoces.setForeground(new java.awt.Color(255, 119, 26));
        jButtonDoces.setText("~Sabores Doces~");
        jButtonDoces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDocesActionPerformed(evt);
            }
        });

        jButton5.setText("Finalizar");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonDoces)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonDoces1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addGap(98, 98, 98))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(337, 337, 337))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonDoces)
                            .addComponent(jButtonDoces1)
                            .addComponent(jRadioButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))))
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);

        jLabel4.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 0));
        jLabel4.setText("Total ");

        cancelar.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 102, 0));
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logo (1).png"))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/whatsapp.png"))); // NOI18N
        jLabel11.setText("(45) 99916-5347");

        jLabel12.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Delivery");

        jLabel13.setFont(new java.awt.Font("Cascadia Code", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/insta.png"))); // NOI18N
        jLabel13.setText("DISKPIZZALEAO");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cartao.png"))); // NOI18N

        concluirPedido.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        concluirPedido.setForeground(new java.awt.Color(255, 102, 0));
        concluirPedido.setText("Concluir pedido");
        concluirPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concluirPedidoActionPerformed(evt);
            }
        });

        jTabbedPane1.setForeground(new java.awt.Color(255, 102, 0));
        jTabbedPane1.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N

        panelCliente.setBackground(new java.awt.Color(90, 90, 90));
        panelCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        panelCliente.setForeground(new java.awt.Color(255, 102, 0));
        panelCliente.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 119, 26));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setMaximumSize(new java.awt.Dimension(50, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 16));

        jLabel8.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 119, 26));
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel8.setMaximumSize(new java.awt.Dimension(50, 16));
        jLabel8.setMinimumSize(new java.awt.Dimension(50, 16));

        cadastroNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroNomeClienteActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 119, 26));
        jLabel26.setText("Nome");

        jLabel28.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 119, 26));
        jLabel28.setText("Telefone");

        jLabel36.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 119, 26));
        jLabel36.setText("Cadastrar cliente");

        cadastroCliente.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        cadastroCliente.setForeground(new java.awt.Color(255, 119, 26));
        cadastroCliente.setText("Cadastrar");
        cadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroClienteActionPerformed(evt);
            }
        });

        tabelaCliente.setBackground(new java.awt.Color(90, 90, 90));
        tabelaCliente.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tabelaCliente.setForeground(new java.awt.Color(255, 119, 26));
        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Telefone"
            }
        ));
        jScrollPane7.setViewportView(tabelaCliente);

        jLabel38.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 119, 26));
        jLabel38.setText("Lista de clientes cadastrados");

        cadastroTelefoneCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastroTelefoneClienteActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 119, 26));
        jLabel40.setText("Data de nascimento");

        filtroNomeCliente.setToolTipText("");

        jLabel41.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 119, 26));
        jLabel41.setText("Nome");

        jLabel42.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 119, 26));
        jLabel42.setText("Telefone");

        filtrarCliente.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        filtrarCliente.setForeground(new java.awt.Color(255, 119, 26));
        filtrarCliente.setText("Filtrar");
        filtrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarClienteActionPerformed(evt);
            }
        });

        selecionarCliente.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        selecionarCliente.setForeground(new java.awt.Color(255, 119, 26));
        selecionarCliente.setText("Selecionar");
        selecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarClienteActionPerformed(evt);
            }
        });

        editarCliente.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        editarCliente.setForeground(new java.awt.Color(255, 119, 26));
        editarCliente.setText("Atualizar");
        editarCliente.setToolTipText("Selecione um cliente para editar");
        editarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarClienteActionPerformed(evt);
            }
        });

        excluirCliente.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        excluirCliente.setForeground(new java.awt.Color(255, 119, 26));
        excluirCliente.setText("Excluir");
        excluirCliente.setToolTipText("Selecione um cliente para excluir");
        excluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirClienteActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pizza4.png"))); // NOI18N

        javax.swing.GroupLayout panelClienteLayout = new javax.swing.GroupLayout(panelCliente);
        panelCliente.setLayout(panelClienteLayout);
        panelClienteLayout.setHorizontalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(158, 158, 158)
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(293, 293, 293)
                                .addComponent(selecionarCliente)
                                .addGap(28, 28, 28)
                                .addComponent(editarCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(excluirCliente)))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addContainerGap(584, Short.MAX_VALUE)
                                .addComponent(jLabel38))
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
                                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(18, 18, 18)
                                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cadastroTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cadastroCliente)
                                            .addComponent(cadastroDataDeNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(44, 44, 44))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClienteLayout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addGap(18, 18, 18)
                                        .addComponent(cadastroNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelClienteLayout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabel36)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filtroNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel42)
                                .addGap(18, 18, 18)
                                .addComponent(filtroTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(filtrarCliente)
                        .addGap(63, 63, 63)))
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelClienteLayout.createSequentialGroup()
                    .addGap(943, 943, 943)
                    .addComponent(jLabel39)
                    .addContainerGap(162, Short.MAX_VALUE)))
        );
        panelClienteLayout.setVerticalGroup(
            panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClienteLayout.createSequentialGroup()
                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelClienteLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel38)
                                .addGap(18, 18, 18)
                                .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel41)
                                    .addComponent(filtroNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(filtroTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel42)
                                    .addComponent(filtrarCliente))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selecionarCliente)
                            .addComponent(editarCliente)
                            .addComponent(excluirCliente)))
                    .addGroup(panelClienteLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel36)
                        .addGap(34, 34, 34)
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(cadastroNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cadastroTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(cadastroDataDeNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(cadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addGap(48, 48, 48))
            .addGroup(panelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelClienteLayout.createSequentialGroup()
                    .addContainerGap(410, Short.MAX_VALUE)
                    .addComponent(jLabel39)
                    .addGap(89, 89, 89)))
        );

        jTabbedPane1.addTab("Cliente", panelCliente);

        panelEnderecos.setBackground(new java.awt.Color(90, 90, 90));
        panelEnderecos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        panelEnderecos.setMaximumSize(new java.awt.Dimension(32767, 25000));

        jPanel1.setBackground(new java.awt.Color(90, 90, 90));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        tCEP.setToolTipText("");

        tRua.setToolTipText("");

        jDescricaoCadastro.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jDescricaoCadastro.setForeground(new java.awt.Color(255, 102, 0));
        jDescricaoCadastro.setText("Rua");

        tBairro.setToolTipText("");

        jLabel32.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 102, 0));
        jLabel32.setText("Bairro");

        tNumero.setToolTipText("");

        jNumero.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jNumero.setForeground(new java.awt.Color(255, 102, 0));
        jNumero.setText("Numero");

        cadastrarEndereco.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        cadastrarEndereco.setForeground(new java.awt.Color(255, 102, 0));
        cadastrarEndereco.setText("Cadastrar");
        cadastrarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarEnderecoActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 102, 0));
        jLabel29.setText("CEP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addGap(214, 214, 214)
                .addComponent(jLabel30)
                .addGap(115, 115, 115))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jDescricaoCadastro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tRua, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(cadastrarEndereco)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDescricaoCadastro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(tBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNumero))
                .addGap(32, 32, 32)
                .addComponent(cadastrarEndereco)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(90, 90, 90));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        filtroRua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroRuaActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 102, 0));
        jLabel35.setText("Rua");

        filtrarEndereco.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        filtrarEndereco.setForeground(new java.awt.Color(255, 102, 0));
        filtrarEndereco.setText("Filtrar");
        filtrarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarEnderecoActionPerformed(evt);
            }
        });

        tabelaEndereco.setBackground(new java.awt.Color(90, 90, 90));
        tabelaEndereco.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tabelaEndereco.setForeground(new java.awt.Color(255, 119, 26));
        tabelaEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Rua", "CEP", "Bairro", "Numero"
            }
        ));
        jScrollPane.setViewportView(tabelaEndereco);
        if (tabelaEndereco.getColumnModel().getColumnCount() > 0) {
            tabelaEndereco.getColumnModel().getColumn(2).setHeaderValue("Bairro");
            tabelaEndereco.getColumnModel().getColumn(3).setHeaderValue("Numero");
        }

        excluirEndereco.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        excluirEndereco.setForeground(new java.awt.Color(255, 102, 0));
        excluirEndereco.setText("Excluir");
        excluirEndereco.setToolTipText("Para excluir, selecione o endereÃ§o");
        excluirEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirEnderecoActionPerformed(evt);
            }
        });

        atualizarEndereco.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        atualizarEndereco.setForeground(new java.awt.Color(255, 102, 0));
        atualizarEndereco.setText("Atualizar");
        atualizarEndereco.setToolTipText("Para excluir, selecione o endereÃ§o");
        atualizarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarEnderecoActionPerformed(evt);
            }
        });

        filtroCep.setToolTipText("");

        jLabel43.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 102, 0));
        jLabel43.setText("CEP");

        filtroBairro.setToolTipText("");

        jLabel44.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 102, 0));
        jLabel44.setText("Bairro");

        selecionarEndereco.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        selecionarEndereco.setForeground(new java.awt.Color(255, 102, 0));
        selecionarEndereco.setText("Selecionar");
        selecionarEndereco.setToolTipText("Para excluir, selecione o endereÃ§o");
        selecionarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarEnderecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel35)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(filtroCep, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel44)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filtroBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(filtroRua, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(filtrarEndereco)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(selecionarEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(atualizarEndereco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(excluirEndereco))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(filtroRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtroCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44)
                            .addComponent(filtroBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(filtrarEndereco)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(excluirEndereco)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(atualizarEndereco)
                        .addComponent(selecionarEndereco)))
                .addGap(20, 20, 20))
        );

        jLabel33.setFont(new java.awt.Font("Cascadia Code", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 102, 0));
        jLabel33.setText("Novo endereÃ§o");

        jLabel34.setFont(new java.awt.Font("Cascadia Code", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 102, 0));
        jLabel34.setText("Lista de endereÃ§os cadastrados");

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pizza5.png"))); // NOI18N

        javax.swing.GroupLayout panelEnderecosLayout = new javax.swing.GroupLayout(panelEnderecos);
        panelEnderecos.setLayout(panelEnderecosLayout);
        panelEnderecosLayout.setHorizontalGroup(
            panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEnderecosLayout.createSequentialGroup()
                .addGroup(panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnderecosLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnderecosLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(141, 141, 141)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnderecosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel27)
                        .addGap(183, 183, 183)))
                .addGroup(panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnderecosLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel34)
                        .addGap(88, 88, 88)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panelEnderecosLayout.setVerticalGroup(
            panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEnderecosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel34)
                .addGap(33, 33, 33)
                .addGroup(panelEnderecosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEnderecosLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(80, 80, 80))
                    .addGroup(panelEnderecosLayout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27)
                        .addGap(0, 21, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("EndereÃ§os Cadastrados", panelEnderecos);

        panelBebidas.setBackground(new java.awt.Color(90, 90, 90));
        panelBebidas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        panelBebidas.setMaximumSize(new java.awt.Dimension(32767, 25000));

        jLabel15.setFont(new java.awt.Font("Cascadia Code", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 102, 0));
        jLabel15.setText("~Filtro~");

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/soda.png"))); // NOI18N

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/dec.png"))); // NOI18N

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/leao.png"))); // NOI18N

        tabelaBebida.setBackground(new java.awt.Color(90, 90, 90));
        tabelaBebida.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tabelaBebida.setForeground(new java.awt.Color(255, 119, 26));
        tabelaBebida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "PreÃ§o"
            }
        ));
        Bebida.setViewportView(tabelaBebida);

        adicionarBebida.setFont(new java.awt.Font("Cascadia Code", 1, 18)); // NOI18N
        adicionarBebida.setForeground(new java.awt.Color(255, 102, 0));
        adicionarBebida.setText("Adicionar");
        adicionarBebida.setToolTipText("Para adicionar a bebida, selecione a bebida desejada clicando na tabela.");
        adicionarBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarBebidaActionPerformed(evt);
            }
        });

        quantidadeBebida.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        quantidadeBebida.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel19.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 119, 26));
        jLabel19.setText("Quantidade:");

        jLabel20.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 119, 26));
        jLabel20.setText("Nome bebida");

        filtrarBebida.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        filtrarBebida.setForeground(new java.awt.Color(255, 119, 26));
        filtrarBebida.setText("Filtrar");
        filtrarBebida.setToolTipText("Para filtrar, preencha os campos e aperte esse botÃ£o.");
        filtrarBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtrarBebidaActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Cascadia Code", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 102, 0));
        jLabel21.setText("~Refrigerantes~");

        javax.swing.GroupLayout panelBebidasLayout = new javax.swing.GroupLayout(panelBebidas);
        panelBebidas.setLayout(panelBebidasLayout);
        panelBebidasLayout.setHorizontalGroup(
            panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBebidasLayout.createSequentialGroup()
                .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBebidasLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(Bebida, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBebidasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addGroup(panelBebidasLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(filtroNomeBebida, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(filtrarBebida)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBebidasLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(adicionarBebida)
                            .addGroup(panelBebidasLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantidadeBebida, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(210, 210, 210)))
                .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBebidasLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBebidasLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(71, 71, 71))))
            .addGroup(panelBebidasLayout.createSequentialGroup()
                .addGap(503, 503, 503)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelBebidasLayout.setVerticalGroup(
            panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBebidasLayout.createSequentialGroup()
                .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBebidasLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelBebidasLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtroNomeBebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(filtrarBebida))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(panelBebidasLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bebida, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBebidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantidadeBebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adicionarBebida)
                        .addGap(50, 50, 50)))
                .addGap(127, 127, 127))
        );

        jTabbedPane1.addTab("Bebidas", panelBebidas);

        tabelaCarrinhoPizza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tamanho", "Sabores", "Borda", "Valor"
            }
        ));
        tabelaCarrinhoPizza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabelaCarrinhoPizzaMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaCarrinhoPizza);

        jLabel37.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 119, 26));
        jLabel37.setText("Pizzas adicionadas");

        adicionarPizza.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        adicionarPizza.setForeground(new java.awt.Color(255, 102, 0));
        adicionarPizza.setText("Adicionar pizza ao pedido");
        adicionarPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarPizzaActionPerformed(evt);
            }
        });

        editarPizza.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        editarPizza.setForeground(new java.awt.Color(255, 102, 0));
        editarPizza.setText("Editar");
        editarPizza.setToolTipText("Para editar a pizza, selecione a pizza clicando na tabela e aperte esse botÃ£o.");
        editarPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarPizzaActionPerformed(evt);
            }
        });

        tabelaCarrinhoBebida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Quantidade", "Valor"
            }
        ));
        jScrollPane4.setViewportView(tabelaCarrinhoBebida);

        jLabel45.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 119, 26));
        jLabel45.setText("Bebidas adicionadas");

        removerSabor.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        removerSabor.setForeground(new java.awt.Color(255, 102, 0));
        removerSabor.setText("Remover");
        removerSabor.setToolTipText("Para remover a pizza, selecione a pizza clicando na tabela e aperte esse botÃ£o.");
        removerSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerSaborActionPerformed(evt);
            }
        });

        atualizarBebida.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        atualizarBebida.setForeground(new java.awt.Color(255, 102, 0));
        atualizarBebida.setText("Editar");
        atualizarBebida.setToolTipText("Para editar a bebida, selecione a bebida clicando na tabela e aperte esse botÃ£o.");
        atualizarBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBebidaActionPerformed(evt);
            }
        });

        removerBebida.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        removerBebida.setForeground(new java.awt.Color(255, 102, 0));
        removerBebida.setText("Remover");
        removerBebida.setToolTipText("Para remover a bebida, selecione a pizza clicando na tabela e aperte esse botÃ£o.");
        removerBebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBebidaActionPerformed(evt);
            }
        });

        totalPedido.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        totalPedido.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        mostraClienteSelecionado.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        mostraClienteSelecionado.setForeground(new java.awt.Color(255, 119, 26));

        jLabel10.setForeground(new java.awt.Color(255, 119, 26));
        jLabel10.setText("Nome do cliente selecionado");

        mostraEnderecoSelecionado.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        mostraEnderecoSelecionado.setForeground(new java.awt.Color(255, 119, 26));

        jLabel22.setForeground(new java.awt.Color(255, 119, 26));
        jLabel22.setText("EndereÃ§o selecionado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel12))
                            .addComponent(jLabel11))
                        .addGap(245, 245, 245)
                        .addComponent(jLabel14)
                        .addGap(216, 216, 216)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addGap(100, 100, 100))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(adicionarPizza)
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(cancelar)
                                .addGap(37, 37, 37)
                                .addComponent(concluirPedido))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(removerSabor)
                                .addGap(18, 18, 18)
                                .addComponent(editarPizza))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(removerBebida)
                                .addGap(18, 18, 18)
                                .addComponent(atualizarBebida))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel45)
                                .addGap(58, 58, 58))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mostraClienteSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mostraEnderecoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)))
                .addComponent(jLabel5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel45)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(atualizarBebida)
                            .addComponent(removerBebida)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(adicionarPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editarPizza)
                            .addComponent(removerSabor))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostraClienteSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostraEnderecoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(concluirPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar))
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Sabores");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cancelarActionPerformed

    private void concluirPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concluirPedidoActionPerformed
        if(clienteSelecionado != null){
            if(enderecoSelecionado != null){
                List<Pedido> pedidos = new ArrayList<>();
                pedidoDAO = new PedidoDAO();
                NotaFiscal nf = new NotaFiscal(clienteSelecionado.getId(), enderecoSelecionado.getId());
                BigDecimal total_nota = BigDecimal.ZERO; 
                for(PizzaMontada pizza: listaDePizzasMontadas){
                    Pedido pedido = new Pedido(pizza.getTamanho(),pizza.getSabores(),pizza.getBorda(),pizza.getValorTotal());
                    pedidos.add(pedido);
                    total_nota = total_nota.add(pizza.getValorTotal());
                }
                if(listaDeBebidasSelecionadas != null){
                    Pedido pedido = new Pedido(listaDeBebidasSelecionadas,calcularValorTotal());
                    total_nota = total_nota.add(pedido.getValorTotal());
                    pedidos.add(pedido);
                } 
                try {
                    nf.setTotal(total_nota);
                    pedidoDAO.inserirNotaFiscal(nf, pedidos);
                    JOptionPane.showMessageDialog(null, "Pedido realizado com sucesso!");
                } catch (SQLException ex) {
                    Logger.getLogger(VendaPizza.class.getName()).log(Level.SEVERE, null, ex);
                }    
            }else{
                JOptionPane.showMessageDialog(null, "Necessario escolher um endereco.","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Necessario escolher um cliente.","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_concluirPedidoActionPerformed

    private void cadastrarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarEnderecoActionPerformed
        String rua=tRua.getText();
        String cep= tCEP.getText();
        String bairro=tBairro.getText();
        String numeroEmString =tNumero.getText();
        int numero = 0;
        float total=0;     

        try {
            numero = Integer.parseInt(tNumero.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Formato de Numero invalido.","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
        }

        if(numero==0){
            JOptionPane.showMessageDialog(null, "Informe um NÃºmero.","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(rua.length()==0){
            JOptionPane.showMessageDialog(null, "Informe uma Rua.","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(cep.length()==0){
            JOptionPane.showMessageDialog(null, "Informe um CEP","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
            return;
        }
          if(bairro.length()==0){
            JOptionPane.showMessageDialog(null, "informe um bairro","AtenÃ§Ã£o",JOptionPane.WARNING_MESSAGE);
            return;
        }
                  
        try {
            Endereco enderecoNovo = new Endereco(rua,cep, bairro, numero,clienteSelecionado.getId());
            clienteDAO.adicionarEndereco(enderecoNovo, clienteSelecionado.getId());
            JOptionPane.showMessageDialog(null, "EndereÃ§o cadastrado!");
            tRua.setText("");
            tCEP.setText("");
            tBairro.setText("");
            tNumero.setText("");
            atualizarTabelaEndereco("","",""); 
        } catch (SQLException ex) {
            ex.printStackTrace();
             JOptionPane.showMessageDialog(null, "Erro ao inserir no bd","Erro", JOptionPane.ERROR_MESSAGE);   
        }
        /*
        String diretorio = "C:\\pedidos";
        String saboresConc = "";
        String bebidasConc = "";
        File diretorioArquivos = new File(diretorio);
        if (!diretorioArquivos.exists()) {
            // Se o diretÃ³rio nÃ£o existe, crie-o
            diretorioArquivos.mkdirs();
        }
        File[] files = diretorioArquivos.listFiles();
        if(sabores.size() == 1){
            saboresConc = sabores.get(0);
        }else{
            for(int i = 0; i < sabores.size(); i++){
                if(i + 1 < sabores.size()){
                    saboresConc += sabores.get(i) + "/";
                }else{
                    saboresConc += sabores.get(i);
                }
            }
        }
        if(bebidas.size() == 1){
            bebidasConc = bebidas.get(0).toString();
        }else{
            for(int i = 0; i < bebidas.size(); i++){
                if(i + 1 < bebidas.size()){
                    bebidasConc += bebidas.get(i).toString() + "/";
                }else{
                    bebidasConc += bebidas.get(i).toString();
                }
            }
        }
        data = new Date();
        int ultimoPedido = 0;
        for (File file : files) {
            if (file.getName().startsWith("pedido")) {
                String[] parts = file.getName().split("pedido");
                int numeroPedido = Integer.parseInt(parts[1].substring(0, parts[1].indexOf(".")));
                if (numeroPedido > ultimoPedido) {
                    ultimoPedido = numeroPedido;
                }
            }
        }
        ultimoPedido++;
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        String dataFormatada = formato.format(data);
        String layout = "-------------------------------------------------\n";
        layout += "         NOTA FISCAL DISK PIZZA LEÃO         \n";
        layout += "-------------------------------------------------\n";
        layout += String.format("NÂº Pedido: %d    Data: %s\n", ultimoPedido, dataFormatada);
        layout += "-------------------------------------------------\n";
        layout += String.format("Cliente: %s\n", tName.getText());
        layout += String.format("EndereÃ§o: %s, %s - %s\nComplemento: %s\n", tDescricao.getText(), tNumero.getText(), tBairro.getText(), tNumero.getText());
        layout += "-------------------------------------------------\n";
        layout += "               ITENS DO PEDIDO               \n";
        layout += String.format("Pizza tamanho: %s\nSabores: %s\nBorda: %s\n", tamanho, saboresConc ,borda);
        layout += String.format("Bebidas: %s\n", bebidasConc);
        layout += "-------------------------------------------------\n";
        layout += String.format("Total: R$ %6.2f\n", total);
        try{
            File arquivo = new File(diretorio,"pedido" + ultimoPedido +".txt");
            FileWriter escritor = new FileWriter(arquivo);
            escritor.write(layout);
            escritor.close();
            JOptionPane.showMessageDialog(this, "Pedido gerado com sucesso!", "Pedido", JOptionPane.INFORMATION_MESSAGE);

        }
        catch(IOException ex){
            JOptionPane.showMessageDialog(this, "Erro ao gerar pedido:" + ex.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
        }
        */
    }//GEN-LAST:event_cadastrarEnderecoActionPerformed

    private void filtroRuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroRuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroRuaActionPerformed

    private void excluirEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirEnderecoActionPerformed
        int linha = tabelaEndereco.getSelectedRow();
        if(linha<0){
            JOptionPane.showMessageDialog(null, "Selecione um endereÃ§o","AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Endereco enderecoSelecionado = listaDeEnderecos.get(linha);
        try {
            clienteDAO.removerEndereco(enderecoSelecionado.getId());
            JOptionPane.showMessageDialog(null, "EndereÃ§o excluÃ­do!");
            atualizarTabelaEndereco("","","");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_excluirEnderecoActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonDocesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDocesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDocesActionPerformed

    private void cadastroNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastroNomeClienteActionPerformed

    private void cadastroTelefoneClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroTelefoneClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cadastroTelefoneClienteActionPerformed

    private void adicionarPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarPizzaActionPerformed
        AdicionarPedido principal = new AdicionarPedido(clienteSelecionado, listaDePizzasMontadas, listaDeBebidasSelecionadas, enderecoSelecionado);
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_adicionarPizzaActionPerformed

    private void cadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastroClienteActionPerformed
        String nomeCliente = cadastroNomeCliente.getText();
        String telefoneCliente = cadastroTelefoneCliente.getText();
        Date auxCadastoDataDeNascimentoCliente = null;  
        if(cadastroDataDeNascimentoCliente.getDate() != null){
            try {
                auxCadastoDataDeNascimentoCliente = new java.sql.Date(cadastroDataDeNascimentoCliente.getDate().getTime());
                clienteDAO.inserirCliente(nomeCliente, telefoneCliente, auxCadastoDataDeNascimentoCliente);
                JOptionPane.showMessageDialog(null, "Cliente cadastrado!");
            } catch (SQLException ex) {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cadastroClienteActionPerformed

    private void filtrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarClienteActionPerformed
        atualizarTabelaCliente(filtroNomeCliente.getText(),filtroTelefoneCliente.getText());
    }//GEN-LAST:event_filtrarClienteActionPerformed

    private void editarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarClienteActionPerformed
        int linha = tabelaCliente.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente para editar", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Cliente cliente = listaClientes.get(linha);
        try {
            TableModel model = tabelaCliente.getModel();
            cliente.setNome((String) model.getValueAt(linha, 0));
            cliente.setTelefone((String) model.getValueAt(linha, 1));
            clienteDAO.editarCliente(cliente);
            atualizarTabelaCliente("", "");
            JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_editarClienteActionPerformed

    private void excluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirClienteActionPerformed
        int linha = tabelaCliente.getSelectedRow();
        Cliente cliente = listaClientes.get(linha);
        try{
            clienteDAO.removerCliente(cliente.getId());
            atualizarTabelaCliente("","");
             JOptionPane.showMessageDialog(null, "Cliente removido com sucesso!");
        }catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_excluirClienteActionPerformed

    private void selecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarClienteActionPerformed
        int linha = tabelaCliente.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente na tabela primeiro", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        this.clienteSelecionado = listaClientes.get(linha);
        if(this.clienteSelecionado != null){
            mostraClienteSelecionado.setText(this.clienteSelecionado.getNome());
            JOptionPane.showMessageDialog(null, "Cliente selecionado!");
        }
        atualizarTabelaEndereco("","","");
    }//GEN-LAST:event_selecionarClienteActionPerformed

    private void atualizarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarEnderecoActionPerformed
        int linha = tabelaEndereco.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um endereÃ§o para editar", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Endereco enderecoEscolhido = listaDeEnderecos.get(linha);
        try {
            TableModel model = tabelaEndereco.getModel();
            enderecoEscolhido.setRua((String) model.getValueAt(linha, 0));
            enderecoEscolhido.setCep((String) model.getValueAt(linha, 1));
            enderecoEscolhido.setBairro((String) model.getValueAt(linha, 2));
            enderecoEscolhido.setNumero(Integer.parseInt((String) model.getValueAt(linha, 3)));
            clienteDAO.atualizarEndereco(enderecoEscolhido);
            atualizarTabelaCliente("", "");
            JOptionPane.showMessageDialog(null, "EndereÃ§o atualizado com sucesso!");
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_atualizarEnderecoActionPerformed

    private void filtrarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarEnderecoActionPerformed
       atualizarTabelaEndereco(filtroRua.getText(), filtroBairro.getText(), filtroCep.getText());
    }//GEN-LAST:event_filtrarEnderecoActionPerformed

    private void editarPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarPizzaActionPerformed
        int linha = tabelaCarrinhoPizza.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um pedido para editar", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        AdicionarPedido principal = new AdicionarPedido(clienteSelecionado, listaDePizzasMontadas, linha,listaDeBebidasSelecionadas, enderecoSelecionado);
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editarPizzaActionPerformed

    private void removerSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerSaborActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removerSaborActionPerformed

    private void atualizarBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBebidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarBebidaActionPerformed

    private void removerBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBebidaActionPerformed
        int linha = tabelaCarrinhoBebida.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione uma bebida para remover");
            return;
        }
        Bebida bebidaSelecionada = listaDeBebidasSelecionadas.get(linha);
        listaDeBebidasSelecionadas.remove(bebidaSelecionada);
        atualizarTabelaCarrinhoBebida();
    }//GEN-LAST:event_removerBebidaActionPerformed

    private void adicionarBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarBebidaActionPerformed
        int linha =tabelaBebida.getSelectedRow();
        if(linha<0){
            JOptionPane.showMessageDialog(null, "Selecione uma bebida para adicionar.");
            return;
        }
        if(listaDeBebidasSelecionadas == null){
            listaDeBebidasSelecionadas = new ArrayList<>();
        }
        Bebida bebidaSelecionada = listaDeBebidas.get(linha); 
        if(!quantidadeBebida.getText().equals("")){
            if(Integer.parseInt(quantidadeBebida.getText()) > 0){
                bebidaSelecionada.setQuantidade(Integer.parseInt(quantidadeBebida.getText()));
                listaDeBebidasSelecionadas.add(bebidaSelecionada);
                atualizarTabelaBebida("");
                atualizarTabelaCarrinhoBebida();
                totalPedido.setText(calcularValorTotal().toString());
                JOptionPane.showMessageDialog(null, "Bebida adicionada com sucesso!");
            }else{
                JOptionPane.showMessageDialog(null, "Selecione uma quantidade vÃ¡lida.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "NecessÃ¡rio inserir a quantidade de bebida que deseja adicionar.");

        }         
    }//GEN-LAST:event_adicionarBebidaActionPerformed

    private void filtrarBebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtrarBebidaActionPerformed
        atualizarTabelaBebida(filtroNomeBebida.getText());
    }//GEN-LAST:event_filtrarBebidaActionPerformed

    private void selecionarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarEnderecoActionPerformed
        int linha = tabelaEndereco.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um endereco na tabela primeiro", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        enderecoSelecionado = listaDeEnderecos.get(linha);
        if(enderecoSelecionado != null){
            mostraEnderecoSelecionado.setText(enderecoSelecionado.getRua());
            JOptionPane.showMessageDialog(null, "EndereÃ§o selecionado!");
        }
    }//GEN-LAST:event_selecionarEnderecoActionPerformed

    private void tabelaCarrinhoPizzaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCarrinhoPizzaMouseEntered
        
    }//GEN-LAST:event_tabelaCarrinhoPizzaMouseEntered
    private void atualizarTabelaCliente(String nomeCliente, String telefoneCliente) {
        try {
            listaClientes = clienteDAO.buscaListaClientes(nomeCliente, telefoneCliente);
            DefaultTableModel model = (DefaultTableModel) tabelaCliente.getModel();
            model.setNumRows(0);
            for (int i = 0; i < listaClientes.size(); i++) {
                Cliente cliente = listaClientes.get(i);
                String nome = cliente.getNome();
                String telefone = cliente.getTelefone();

                model.addRow(new Object[]{nome, telefone});            
            }
            corColunasTabela(tabelaCliente, 0);
            corColunasTabelaCenter(tabelaCliente, 1, true);
            centralizarTituloColuna(tabelaCliente, 0);
            centralizarTituloColuna(tabelaCliente, 1);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    private void atualizarTabelaEndereco(String ruaAtualizada, String bairroAtualizado, String cepAtualizado) {
        try {
            listaDeEnderecos = clienteDAO.buscaEndereco(ruaAtualizada, bairroAtualizado, cepAtualizado, clienteSelecionado.getId());
            DefaultTableModel model = (DefaultTableModel) tabelaEndereco.getModel();
            model.setNumRows(0);
            if(listaDeEnderecos != null){
                for (int i = 0; i < listaDeEnderecos.size(); i++) {
                    Endereco endereco = listaDeEnderecos.get(i);
                    String rua = endereco.getRua();
                    String bairro = endereco.getBairro();
                    String cep = endereco.getCep();
                    int numero = endereco.getNumero();

                    model.addRow(new Object[]{rua, cep, bairro, numero});            
                }
            }
            corColunasTabela(tabelaEndereco, 0);
            corColunasTabelaCenter(tabelaEndereco, 1, true);
            corColunasTabelaCenter(tabelaEndereco, 2, true);
            corColunasTabelaCenter(tabelaEndereco, 3, true);
            centralizarTituloColuna(tabelaEndereco, 0);
            centralizarTituloColuna(tabelaEndereco, 1);
            centralizarTituloColuna(tabelaEndereco, 2);
            centralizarTituloColuna(tabelaEndereco, 3);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    private void atualizarTabelaBebida(String nomeBebida) {
        try {
            listaDeBebidas = bebidaDAO.retornaListaBebidaPeloNome(nomeBebida);
            DefaultTableModel model = (DefaultTableModel) tabelaBebida.getModel();
            model.setNumRows(0);
            if(listaDeBebidas != null){
               for (int i = 0; i < listaDeBebidas.size(); i++) {
                    Bebida bebida = listaDeBebidas.get(i);
                    String nome = bebida.getNome();
                    BigDecimal preco = bebida.getPreco();

                    model.addRow(new Object[]{nome, preco});            
                } 
            }
            
            corColunasTabela(tabelaBebida, 0);
            corColunasTabelaCenter(tabelaBebida, 1, true);
            centralizarTituloColuna(tabelaBebida, 0);
            centralizarTituloColuna(tabelaBebida, 1);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    private void atualizarTabelaCarrinhoPizza() {
        DefaultTableModel model = (DefaultTableModel) tabelaCarrinhoPizza.getModel();
        model.setNumRows(0);
        if(listaDePizzasMontadas != null){
            for (int i = 0; i < listaDePizzasMontadas.size(); i++) {
                PizzaMontada pizza = listaDePizzasMontadas.get(i);
                model.addRow(new Object[]{pizza.getTamanho(), pizza.concatenaPizzas(), pizza.getBorda(), pizza.getValorTotal()});
            }
        }
        corColunasTabelaCenter(tabelaCarrinhoPizza, 0, false);
        corColunasTabelaCenter(tabelaCarrinhoPizza, 2, false);
        corColunasTabelaCenter(tabelaCarrinhoPizza, 3, false);
        centralizarTituloColuna(tabelaCarrinhoPizza, 0);
        centralizarTituloColuna(tabelaCarrinhoPizza, 1);        
        centralizarTituloColuna(tabelaCarrinhoPizza, 2);        
        centralizarTituloColuna(tabelaCarrinhoPizza, 3);        
        
    }
    private void atualizarTabelaCarrinhoBebida() {
        DefaultTableModel model = (DefaultTableModel) tabelaCarrinhoBebida.getModel();
        model.setNumRows(0);
        if(listaDeBebidasSelecionadas != null){
            for (Bebida bebida : listaDeBebidasSelecionadas) {
                model.addRow(new Object[]{bebida.getNome(), bebida.getQuantidade(), bebida.getPreco().multiply(new BigDecimal(bebida.getQuantidade()))});
            } 
        }
        corColunasTabelaCenter(tabelaCarrinhoBebida, 1, false);
        corColunasTabelaCenter(tabelaCarrinhoBebida, 2,false);
        centralizarTituloColuna(tabelaCarrinhoBebida, 0);
        centralizarTituloColuna(tabelaCarrinhoBebida, 1);        
        centralizarTituloColuna(tabelaCarrinhoBebida, 2);
              
    }
    private BigDecimal calcularValorTotal(){
        BigDecimal total = BigDecimal.ZERO;
        if(listaDePizzasMontadas != null){
            for(PizzaMontada pedido:listaDePizzasMontadas){
                total = total.add(pedido.getValorTotal());
            }
        }
        if(listaDeBebidasSelecionadas!= null){
            for(Bebida pedido:listaDeBebidasSelecionadas){
                total = total.add(pedido.getPreco().multiply(new BigDecimal(pedido.getQuantidade())));
            }
        }
        return total;
    }
    private void corColunasTabelaCenter(JTable table, int i, boolean querCor) {
        VendaPizza.LinhaRendererCenter linhaRenderer = new VendaPizza.LinhaRendererCenter(querCor);
        TableColumnModel columnModel = table.getColumnModel();
        columnModel.getColumn(i).setCellRenderer(linhaRenderer);
    } 
    private void corColunasTabela(JTable table, int i) {
        LinhaRenderer linhaRenderer = new LinhaRenderer();
        TableColumnModel columnModel = table.getColumnModel();
        columnModel.getColumn(i).setCellRenderer(linhaRenderer);
    }
    public static void centralizarTituloColuna(JTable tabela, int coluna) {
        TableColumnModel colunaModelo = tabela.getColumnModel();
        DefaultTableCellRenderer renderizador = (DefaultTableCellRenderer) colunaModelo.getColumn(coluna).getHeaderRenderer();
        
        if (renderizador == null) {
            renderizador = (DefaultTableCellRenderer) tabela.getTableHeader().getDefaultRenderer();
        }
        
        renderizador.setHorizontalAlignment(SwingConstants.CENTER);
        colunaModelo.getColumn(coluna).setHeaderRenderer(renderizador);
    }

    public static void main(String[] args) {
        // Exemplo de uso:
        JTable tabela = new JTable(10, 5); // Cria uma tabela 10x5
        
        // Centralizar o tÃ­tulo da coluna 2
        centralizarTituloColuna(tabela, 2);
    }
    public class LinhaRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            // Defina a cor de fundo e a cor do texto da linha desejada
            if (isSelected) {
                component.setBackground(table.getSelectionBackground());
                component.setForeground(table.getSelectionForeground());
            } else {
                if (row % 2 == 0) { // Por exemplo, linhas pares terÃ£o cor de fundo diferente
                    component.setBackground(Color.DARK_GRAY);
                    component.setForeground(table.getForeground());
                } else {
                    component.setBackground(Color.GRAY);
                    component.setForeground(Color.WHITE);
                     // Cor do texto padrÃ£o
                }
            }

            return component;
        }
    }
    public class LinhaRendererCenter extends DefaultTableCellRenderer {
        private boolean querCor;
        public LinhaRendererCenter(boolean querCor) {
            this.querCor = querCor;
        }
        
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setHorizontalAlignment(SwingConstants.CENTER);
            // Defina a cor de fundo e a cor do texto da linha desejada
            if(this.querCor){
                if (isSelected) {
                component.setBackground(table.getSelectionBackground());
                component.setForeground(table.getSelectionForeground());
                } else {
                    if (row % 2 == 0) { // Por exemplo, linhas pares terÃ£o cor de fundo diferente
                        component.setBackground(Color.DARK_GRAY);
                        component.setForeground(table.getForeground());
                    } else {
                        component.setBackground(Color.GRAY);
                        component.setForeground(Color.WHITE);
                         // Cor do texto padrÃ£o
                    }
                }
            }
            

            return component;
        }
    }
    
   //------------------------------FUNCOES----------------------------------------------
//    private void updateCheckboxState() {
//        int selectedCount = 0;
//
//        for (JCheckBox checkbox : checkboxList) {
//            if (checkbox.isSelected()) {
//                selectedCount++;
//            }
//        }
//
//        for (JCheckBox checkbox : checkboxList) {
//            if (!checkbox.isSelected() && selectedCount >= limit) {
//                checkbox.setEnabled(false);
//            } else {
//                checkbox.setEnabled(true);
//            }
//        }
//    }
//    private void adicionaSabores(Component[] components){
//        for (Component component : components) {
//            if (component instanceof JCheckBox) {
//                JCheckBox checkBox = (JCheckBox) component;
//                checkboxList.add(checkBox);
//                checkBox.addItemListener(new ItemListener() {
//                    @Override
//                    public void itemStateChanged(ItemEvent e) {
//                        updateCheckboxState();
//                    }
//                });
//            }
//        }
//    }
//    private String retornaBebidas(){
//        
////        StringBuilder sb = new StringBuilder();
////        for (Bebida bebida : listaDeBebidas) {
////            sb.append(bebida.getQuantidade()+"x - ").append(bebida.getNome()).append("; ");
////        }
////        return sb.toString();
//    }
  
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Bebida;
    private javax.swing.JButton adicionarBebida;
    private javax.swing.JButton adicionarPizza;
    private javax.swing.JButton atualizarBebida;
    private javax.swing.JButton atualizarEndereco;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cadastrarEndereco;
    private javax.swing.JButton cadastroCliente;
    private com.toedter.calendar.JDateChooser cadastroDataDeNascimentoCliente;
    private javax.swing.JTextField cadastroNomeCliente;
    private javax.swing.JTextField cadastroTelefoneCliente;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton concluirPedido;
    private javax.swing.JButton editarCliente;
    private javax.swing.JButton editarPizza;
    private javax.swing.JButton excluirCliente;
    private javax.swing.JButton excluirEndereco;
    private javax.swing.JButton filtrarBebida;
    private javax.swing.JButton filtrarCliente;
    private javax.swing.JButton filtrarEndereco;
    private javax.swing.JTextField filtroBairro;
    private javax.swing.JTextField filtroCep;
    private javax.swing.JTextField filtroNomeBebida;
    private javax.swing.JTextField filtroNomeCliente;
    private javax.swing.JTextField filtroRua;
    private javax.swing.JTextField filtroTelefoneCliente;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JRadioButton jButtonDoces;
    private javax.swing.JRadioButton jButtonDoces1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jDescricaoCadastro;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jNumero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField mostraClienteSelecionado;
    private javax.swing.JTextField mostraEnderecoSelecionado;
    private javax.swing.JPanel panelBebidas;
    private javax.swing.JPanel panelCliente;
    private javax.swing.JPanel panelEnderecos;
    private javax.swing.JTextField quantidadeBebida;
    private javax.swing.JButton removerBebida;
    private javax.swing.JButton removerSabor;
    private javax.swing.JButton selecionarCliente;
    private javax.swing.JButton selecionarEndereco;
    private javax.swing.JTextField tBairro;
    private javax.swing.JTextField tCEP;
    private javax.swing.JTextField tNumero;
    private javax.swing.JTextField tRua;
    private javax.swing.JTable tabelaBebida;
    private javax.swing.JTable tabelaCarrinhoBebida;
    private javax.swing.JTable tabelaCarrinhoPizza;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTable tabelaEndereco;
    private javax.swing.JTextField totalPedido;
    // End of variables declaration//GEN-END:variables
}
