/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import dao.PizzaDAO;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Bebida;
import models.Cliente;
import models.Endereco;
import models.Pizza;
import models.PizzaMontada;

/**
 *
 * @author hawks
 */
public class AdicionarPedido extends javax.swing.JFrame {

    /**
     * Creates new form AdicionarPedido
     */
    int limit = 1;
    String tamanho = "";
    private final Cliente cliente;
    List<PizzaMontada> pizzasMontadas = null;
    List<Pizza> listaDeSabores = null;
    List<Bebida> listaDeBebidas = null;
    List<Pizza> listaDeSaboresSelecionados = null;
    Endereco enderecoSelecionado = null;
    PizzaDAO pizzaDAO = new PizzaDAO();
    int indexParaAtualizar = -1;
    int indexUltimaLinhaSelecionada = -1;
    public AdicionarPedido(Cliente cliente) {
        this.cliente = cliente;
        this.listaDeSabores = new ArrayList<>();
        initComponents();
        atualizarTabelaPizza();
        atualizaLimite();
    }
     public AdicionarPedido(Cliente cliente, List<PizzaMontada> pizzasMontadas, int pedidoASerAtualizado, List<Bebida> listaDeBebidas, Endereco enderecoSelecionado) {
        this.cliente = cliente;
        this.pizzasMontadas = pizzasMontadas;
        this.listaDeBebidas = listaDeBebidas;
        this.enderecoSelecionado = enderecoSelecionado;
        initComponents();
        atualizarTabelaPizza();
        indexParaAtualizar = pedidoASerAtualizado;
        pedidoParaAtualizar(pedidoASerAtualizado);
        atualizarTabelaSaboresSelecionados();
    }
    public AdicionarPedido(Cliente cliente, List<PizzaMontada> pizzasMontadas, List<Bebida> listaDeBebidas, Endereco enderecoSelecionado) {
        this.cliente = cliente;
        this.enderecoSelecionado = enderecoSelecionado;
        this.pizzasMontadas = pizzasMontadas;
        this.listaDeBebidas = listaDeBebidas;
        initComponents();
        atualizarTabelaPizza();
        atualizarTabelaSaboresSelecionados();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tamanhoComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSaboresPizza = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        bordaCheddar = new javax.swing.JRadioButton();
        bordaMussarela = new javax.swing.JRadioButton();
        bordaChocolate = new javax.swing.JRadioButton();
        bordaCatupiry = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        adicionarSabor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaSaboresSelecionados = new javax.swing.JTable();
        removerSabor = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        filtroSaboresEspeciais = new javax.swing.JRadioButton();
        filtroSaboresTradicionais = new javax.swing.JRadioButton();
        filtroSaboresDoces = new javax.swing.JRadioButton();
        adicionarPizza = new javax.swing.JButton();
        removerSabor1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        exibeIngredientes = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(90, 90, 90));
        jPanel1.setForeground(new java.awt.Color(255, 119, 26));

        jLabel1.setFont(new java.awt.Font("Cascadia Code", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Tamanho");

        tamanhoComboBox.setFont(new java.awt.Font("Cascadia Code", 0, 12)); // NOI18N
        tamanhoComboBox.setForeground(new java.awt.Color(255, 102, 0));
        tamanhoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pequena: 1 sabor, 8 fatias e 25cm R$ 20,00", "MÃ©dia: 2 sabores, 12 fatias R$ 37,00", "Grande: 3 sabores, 16 fatias R$ 47,00", "Grande familia: 4 sabores, 20 fatias R$ 67,00", "Big: 4 sabores, 24 fatias R$ 82,00", "Big retangular: 4 sabores, 32 fatias R$ 77,00" }));
        tamanhoComboBox.setSelectedItem(-1);
        tamanhoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tamanhoComboBoxActionPerformed(evt);
            }
        });

        tabelaSaboresPizza.setBackground(new java.awt.Color(90, 90, 90));
        tabelaSaboresPizza.setForeground(new java.awt.Color(255, 119, 26));
        tabelaSaboresPizza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Tipo"
            }
        ));
        tabelaSaboresPizza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaSaboresPizzaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaSaboresPizza);

        jPanel2.setBackground(new java.awt.Color(90, 90, 90));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));

        buttonGroup1.add(bordaCheddar);
        bordaCheddar.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        bordaCheddar.setForeground(new java.awt.Color(255, 102, 0));
        bordaCheddar.setText("Cheddar");

        buttonGroup1.add(bordaMussarela);
        bordaMussarela.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        bordaMussarela.setForeground(new java.awt.Color(255, 102, 0));
        bordaMussarela.setText("Mussarela com oregano");

        buttonGroup1.add(bordaChocolate);
        bordaChocolate.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        bordaChocolate.setForeground(new java.awt.Color(255, 102, 0));
        bordaChocolate.setText("Chocolate");

        buttonGroup1.add(bordaCatupiry);
        bordaCatupiry.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        bordaCatupiry.setForeground(new java.awt.Color(255, 102, 0));
        bordaCatupiry.setText("Catupiry");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bordaCheddar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bordaChocolate)
                .addGap(18, 18, 18)
                .addComponent(bordaMussarela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bordaCatupiry)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bordaCheddar)
                    .addComponent(bordaChocolate)
                    .addComponent(bordaMussarela)
                    .addComponent(bordaCatupiry))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Cascadia Code", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("Borda");

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pizza3.png"))); // NOI18N

        adicionarSabor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        adicionarSabor.setForeground(new java.awt.Color(255, 119, 26));
        adicionarSabor.setText("Adicionar");
        adicionarSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarSaborActionPerformed(evt);
            }
        });

        tabelaSaboresSelecionados.setBackground(new java.awt.Color(90, 90, 90));
        tabelaSaboresSelecionados.setForeground(new java.awt.Color(255, 119, 26));
        tabelaSaboresSelecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Sabores Selecionados"
            }
        ));
        jScrollPane2.setViewportView(tabelaSaboresSelecionados);

        removerSabor.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        removerSabor.setForeground(new java.awt.Color(255, 119, 26));
        removerSabor.setText("Remover");
        removerSabor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerSaborActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 119, 26));
        jLabel6.setText("Filtros");

        filtroSaboresEspeciais.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        filtroSaboresEspeciais.setForeground(new java.awt.Color(255, 119, 26));
        filtroSaboresEspeciais.setText("~Sabores Especiais~");

        filtroSaboresTradicionais.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        filtroSaboresTradicionais.setForeground(new java.awt.Color(255, 119, 26));
        filtroSaboresTradicionais.setText("~Sabores Tradicionais~");

        filtroSaboresDoces.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        filtroSaboresDoces.setForeground(new java.awt.Color(255, 119, 26));
        filtroSaboresDoces.setText("~Sabores Doces~");
        filtroSaboresDoces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroSaboresDocesActionPerformed(evt);
            }
        });

        adicionarPizza.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        adicionarPizza.setForeground(new java.awt.Color(255, 119, 26));
        adicionarPizza.setText("Finalizar");
        adicionarPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarPizzaActionPerformed(evt);
            }
        });

        removerSabor1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        removerSabor1.setForeground(new java.awt.Color(255, 119, 26));
        removerSabor1.setText("Filtrar");
        removerSabor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerSabor1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 119, 26));
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 119, 26));
        jLabel3.setText("DescriÃ§Ã£o");

        exibeIngredientes.setBackground(new java.awt.Color(90, 90, 90));
        exibeIngredientes.setColumns(20);
        exibeIngredientes.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        exibeIngredientes.setForeground(new java.awt.Color(255, 119, 26));
        exibeIngredientes.setLineWrap(true);
        exibeIngredientes.setRows(5);
        exibeIngredientes.setText("Selecione uma pizza para exibir sua descriÃ§Ã£o nesse campo");
        exibeIngredientes.setWrapStyleWord(true);
        jScrollPane3.setViewportView(exibeIngredientes);

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 119, 26));
        jLabel4.setText("Ingredientes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tamanhoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(33, 33, 33)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(filtroSaboresDoces)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(filtroSaboresTradicionais)
                                                    .addComponent(filtroSaboresEspeciais))
                                                .addGap(18, 18, 18)
                                                .addComponent(removerSabor1))))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(436, 436, 436)
                                            .addComponent(adicionarSabor))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(238, 238, 238)
                                .addComponent(jLabel6)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addComponent(removerSabor))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(121, 121, 121)
                                        .addComponent(adicionarPizza)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel25)
                                            .addGap(144, 144, 144))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(61, 61, 61)))))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tamanhoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removerSabor)
                        .addGap(18, 18, 18)
                        .addComponent(adicionarPizza))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(adicionarSabor))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(filtroSaboresDoces)
                                .addGap(0, 0, 0)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(removerSabor1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(filtroSaboresTradicionais)
                                        .addGap(1, 1, 1)
                                        .addComponent(filtroSaboresEspeciais)))))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tamanhoComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tamanhoComboBoxActionPerformed
        atualizaLimite();
    }//GEN-LAST:event_tamanhoComboBoxActionPerformed
    private void atualizaLimite(){
        switch (tamanhoComboBox.getSelectedIndex()) {
            case 0:
                limit = 1;
                break;
            case 1:
                limit = 2;
                break;
            case 2:
                limit = 3;
                break;
            case 3:
                limit = 4;
                break;
            case 4:
                limit = 4;
                break;
            case 5:
                limit = 4;
                break;
        }
    }
    private void pedidoParaAtualizar(int index){
        if("Cheddar".equals(pizzasMontadas.get(index).getBorda())){
            bordaCheddar.setSelected(true);
        }
        else if("Chocolate".equals(pizzasMontadas.get(index).getBorda())){
            bordaMussarela.setSelected(true);
        }
        else if("Mussarela com oregano".equals(pizzasMontadas.get(index).getBorda())){
            bordaChocolate.setSelected(true);
        }else if("Catupiry".equals(pizzasMontadas.get(index).getBorda())){
            bordaCatupiry.setSelected(true);
        }

        switch (pizzasMontadas.get(index).getTamanho()) {
            case "PEQUENA":
                tamanhoComboBox.setSelectedIndex(0);
                break;
            case "MÃDIA":
                tamanhoComboBox.setSelectedIndex(1);
                break;
            case "GRANDE":
                tamanhoComboBox.setSelectedIndex(2);
                break;
            case "GRANDE FAMILIA":
                tamanhoComboBox.setSelectedIndex(3);
                break;
            case "BIG":
                tamanhoComboBox.setSelectedIndex(4);
                break;
            case "BIG RETANGULAR":
                tamanhoComboBox.setSelectedIndex(5);
                break;
        }
        listaDeSaboresSelecionados = new ArrayList<>();
        for(Pizza saborParaAtualizar : pizzasMontadas.get(index).getSabores()){
            listaDeSaboresSelecionados.add(saborParaAtualizar);
        }
    }
    private void atualizarTabelaPizza() {
        try {
            listaDeSabores = pizzaDAO.buscarListaDePizzas();
            DefaultTableModel model = (DefaultTableModel) tabelaSaboresPizza.getModel();
            
            model.setNumRows(0);
            for (int i = 0; i < listaDeSabores.size(); i++) {
                Pizza pizza = listaDeSabores.get(i);
                String nomePizza = pizza.getNome();
                String tipo = pizza.getTipo();

                model.addRow(new Object[]{nomePizza, tipo});
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    private String retornaBorda(){
        if(bordaCheddar.isSelected()){
            return "Cheddar";
        }
        else if(bordaChocolate.isSelected()){
            return "Chocolate";
        }
        else if(bordaMussarela.isSelected()){
            return "Mussarela com oregano";
        }else if(bordaCatupiry.isSelected()){
            return "Catupiry";
        }
        return "Sem borda";
    }
    private void filtroSaboresDocesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroSaboresDocesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroSaboresDocesActionPerformed
    
    private void adicionarSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarSaborActionPerformed
        if(listaDeSaboresSelecionados == null){
            listaDeSaboresSelecionados = new ArrayList<>();
        }
        if(listaDeSaboresSelecionados.size() + 1 <= limit){
            int linha =tabelaSaboresPizza.getSelectedRow();
            if(linha<0){
                JOptionPane.showMessageDialog(null, "Selecione um sabor para adicionar","AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Pizza pizzaSelecionado = listaDeSabores.get(linha); 
            listaDeSaboresSelecionados.add(pizzaSelecionado);
            atualizarTabelaSaboresSelecionados();
        }else{
                JOptionPane.showMessageDialog(null, "Para o tamanho selecionado pode adicionar " + limit + " sabor(es).","AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        }     
    }//GEN-LAST:event_adicionarSaborActionPerformed

    private void removerSaborActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerSaborActionPerformed
        int linha =tabelaSaboresSelecionados.getSelectedRow();
        if(linha<0){
            JOptionPane.showMessageDialog(null, "Selecione um endereÃ§o","AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Pizza saborRemovido = listaDeSaboresSelecionados.remove(linha);
        atualizarTabelaSaboresSelecionados();
    }//GEN-LAST:event_removerSaborActionPerformed
     private BigDecimal calcularValorTotal(){
        boolean isBordaCheck = false;
        double total = 0;
        if(bordaCheddar.isSelected() || bordaMussarela.isSelected() || bordaChocolate.isSelected() || bordaCatupiry.isSelected()){
            isBordaCheck = true;
        }
        switch (tamanhoComboBox.getSelectedIndex()) {
            case 0:
                tamanho = "PEQUENA";
                if(isBordaCheck){
                    total += 23.00;
                }else{
                    total += 20.00;
                }
                break;
            case 1:
                tamanho = "MÃDIA";
                if(isBordaCheck){
                    total += 43.00;
                }else{
                    total += 37.00;
                }
                break;
            case 2:
                tamanho = "GRANDE";
                if(isBordaCheck){
                    total += 54.00;
                }else{
                    total += 47.00;
                }
                break;
            case 3:
                tamanho = "GRANDE FAMILIA";
                if(isBordaCheck){
                    total += 74.00;
                }else{
                    total += 67.00;
                }
                break;
            case 4:
                tamanho = "BIG";
                if(isBordaCheck){
                    total += 92.00;
                }else{
                    total += 82.00;
                }
                break;
            case 5:
                tamanho = "BIG RETANGULAR";
                if(isBordaCheck){
                    total += 87.00;
                }else{
                    total += 77.00;
                }
                break;
        }
        
        return new BigDecimal(total);
    }
    private void adicionarPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarPizzaActionPerformed
        BigDecimal total = calcularValorTotal();
        if(pizzasMontadas == null){
            pizzasMontadas = new ArrayList<>();
            pizzasMontadas.add(new PizzaMontada(tamanho, listaDeSaboresSelecionados, retornaBorda(), calcularValorTotal()));
        }else{
            pizzasMontadas.get(indexParaAtualizar).setBorda(retornaBorda());
            pizzasMontadas.get(indexParaAtualizar).setTamanho(tamanho);
            pizzasMontadas.get(indexParaAtualizar).setSabores(listaDeSaboresSelecionados);
            pizzasMontadas.get(indexParaAtualizar).setValorTotal(calcularValorTotal());
        }
        VendaPizza pizza = new VendaPizza(cliente, pizzasMontadas, listaDeBebidas, enderecoSelecionado);
        pizza.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_adicionarPizzaActionPerformed

    private void removerSabor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerSabor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removerSabor1ActionPerformed

    private void tabelaSaboresPizzaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaSaboresPizzaMouseClicked
        int linha = tabelaSaboresPizza.getSelectedRow();
        if(indexUltimaLinhaSelecionada != linha)
        {
            Pizza pizzaSelecionado = listaDeSabores.get(linha);
            exibeIngredientes.setText(pizzaSelecionado.getIngredientes());
            indexUltimaLinhaSelecionada = linha;
        }
    }//GEN-LAST:event_tabelaSaboresPizzaMouseClicked

    /**
     * @param args the command line arguments
     */
    private void atualizarTabelaSaboresSelecionados() {
        DefaultTableModel model = (DefaultTableModel) tabelaSaboresSelecionados.getModel();
        model.setNumRows(0);
        if(listaDeSaboresSelecionados != null){
            for (int i = 0; i < listaDeSaboresSelecionados.size(); i++) {
                Pizza pizza = listaDeSaboresSelecionados.get(i);
                String nomePizza = pizza.getNome();
                String tipo = pizza.getTipo();
                model.addRow(new Object[]{nomePizza, tipo});
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarPizza;
    private javax.swing.JButton adicionarSabor;
    private javax.swing.JRadioButton bordaCatupiry;
    private javax.swing.JRadioButton bordaCheddar;
    private javax.swing.JRadioButton bordaChocolate;
    private javax.swing.JRadioButton bordaMussarela;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea exibeIngredientes;
    private javax.swing.JRadioButton filtroSaboresDoces;
    private javax.swing.JRadioButton filtroSaboresEspeciais;
    private javax.swing.JRadioButton filtroSaboresTradicionais;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton removerSabor;
    private javax.swing.JButton removerSabor1;
    private javax.swing.JTable tabelaSaboresPizza;
    private javax.swing.JTable tabelaSaboresSelecionados;
    private javax.swing.JComboBox<String> tamanhoComboBox;
    // End of variables declaration//GEN-END:variables
}
